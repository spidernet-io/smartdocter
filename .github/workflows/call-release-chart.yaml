# must set branch 'github_pages' as github page
# this workflow will create the tgz from "/charts/*" of branch main,
# and deploy to "/charts" of branch "github_pages"
# and on branch "github_pages", update '/index.yaml' for '/charts/*.tgz'

name: Call Release Charts

env:
  HELM_VERSION: v3.8.1
  PR_LABEL: pr/release/robot_update_githubpage
  PR_REVIWER: weizhoublue
  MERGE_BRANCH: github_pages

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
      submit:
        required: true
        type: string
    outputs:
      artifact:
        description: "name of chart artifact"
        value: chart_package_artifact
        # value: ${{ jobs.example_job.outputs.output1 }}
  workflow_dispatch:
    inputs:
      ref:
        description: 'tag, sha, branch'
        required: true
        default: v1.0.0

permissions: write-all

jobs:
  get_ref:
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.get_original_ref.outputs.ref }}
      submit: ${{ steps.get_original_ref.outputs.submit }}
    steps:
      - name: Get Original Ref
        id: get_original_ref
        run: |
          if ${{ inputs.ref != '' }} ; then
              echo "call by workflow_call"
              ver=${{ inputs.ref }}
              echo ::set-output name=ref::${ver}
              echo ::set-output name=submit::${{ inputs.submit }}
          elif ${{ github.event_name == 'workflow_dispatch' }} ; then
              echo "call by self workflow_dispatch"
              ver=${{ github.event.inputs.ref }}
              echo ::set-output name=ref::${ver}
              echo ::set-output name=submit::true
          else
              echo "unexpected event: ${{ github.event_name }}"
              exit 1
          fi

  # packages tgz from /charts of original branch, deploy to /charts of target branch
  package_chart:
    runs-on: ubuntu-latest
    needs: get_ref
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.get_ref.outputs.ref }}

      - name: Install Helm
        uses: azure/setup-helm@v3.0
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Package Chart
        continue-on-error: false
        run: |
          make package-charts

      - name: Upload Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          name: chart_package_artifact
          path: output_charts/*
          retention-days: 1
          if-no-files-found: error
